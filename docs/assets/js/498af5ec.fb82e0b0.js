"use strict";(self.webpackChunkrag_eval_docs=self.webpackChunkrag_eval_docs||[]).push([[404],{8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>o});var s=n(6540);const r={},i=s.createContext(r);function c(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(i.Provider,{value:t},e.children)}},8687:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"metrics/generation/semscore","title":"SEMScore","description":"A metric that measures semantic similarity between candidate (generated) text and reference text using embeddings and cosine similarity.","source":"@site/docs/metrics/generation/semscore.md","sourceDirName":"metrics/generation","slug":"/metrics/generation/semscore","permalink":"/docs/metrics/generation/semscore","draft":false,"unlisted":false,"editUrl":"https://github.com/your-org/your-repo-name/edit/main/docs/docs/metrics/generation/semscore.md","tags":[],"version":"current","frontMatter":{"id":"semscore","title":"SEMScore"},"sidebar":"docs","previous":{"title":"ROUGEScore","permalink":"/docs/metrics/generation/rougescore"},"next":{"title":"AlignScore","permalink":"/docs/metrics/generation/alignscore"}}');var r=n(4848),i=n(8453);const c={id:"semscore",title:"SEMScore"},o="SEMScore",a={},d=[{value:"<strong>Insights</strong>",id:"insights",level:3},{value:"<strong>Example</strong>",id:"example",level:3},{value:"<strong>Output</strong>",id:"output",level:3}];function l(e){const t={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"semscore",children:(0,r.jsx)(t.strong,{children:"SEMScore"})})}),"\n",(0,r.jsx)(t.p,{children:"A metric that measures semantic similarity between candidate (generated) text and reference text using embeddings and cosine similarity."}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Inputs:"})," candidate (generated) text and reference text."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Returns:"})," a single SEMScore value."]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"insights",children:(0,r.jsx)(t.strong,{children:"Insights"})}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"SEMScore"}),(0,r.jsx)(t.th,{children:"Inference"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"closer to 1"}),(0,r.jsx)(t.td,{children:"more semantically similar"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"closer to 0"}),(0,r.jsx)(t.td,{children:"unrelated"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"negative score"}),(0,r.jsx)(t.td,{children:"semantically opposite"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"example",children:(0,r.jsx)(t.strong,{children:"Example"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-py",children:'from vero import SEMScore\n\n#example inputs\n#chunks_list = ["The cat sat on the mat.", "The dog barked at the mailman."]\n#answers_list = ["A cat is sitting on a mat and a dog is barking at the mailman."]\nwith SEMScore() as ss:\n    sem_results = [ss.evaluate(chunk, ans) for chunk, ans in zip(chunks_list, answers_list)]\nprint(sem_results)\n'})}),"\n",(0,r.jsx)(t.h3,{id:"output",children:(0,r.jsx)(t.strong,{children:"Output"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",children:"0.92\n"})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);